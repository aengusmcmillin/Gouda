using namespace metal;

struct VertexUniforms {
    float4x4 mat;
};

struct VertexOut {
    float4 position [[position]];
    float2 texCoord;
};

vertex VertexOut vertex_main(constant float4 *position [[buffer(0)]],
                                 constant float2 *texCoords [[buffer(1)]],
                                 constant VertexUniforms &transformation [[buffer(2)]],
                                 constant VertexUniforms &projection [[buffer(3)]],
                                 uint vid [[vertex_id]])
{
    VertexOut VertexOut;
    VertexOut.position = position[vid] * transformation.mat * projection.mat;
    VertexOut.texCoord = texCoords[vid];
    return VertexOut;
}

fragment float4 fragment_main(VertexOut interpolated [[stage_in]],
                                texture2d<float> tex2D [[ texture(0) ]])
{
    constexpr sampler textureSampler (mag_filter::linear,
                                      min_filter::linear);
    float4 col = tex2D.sample(textureSampler, interpolated.texCoord);
    return float4(col[0], col[1], col[2], col[3]);
}
